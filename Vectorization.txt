-------------------------------------------------------------------------------------------------------------
Vectorization
------------------------------------------------------------------------------------------------------------
Vectorization in Hive

Definition: Vectorization is a technique in Hive that processes data in a columnar manner, optimizing performance by operating on batches of data (vectors) rather than individual rows.
-------------------------------------------------------------
Key Points
-------------------------------------------------------------
1.Columnar Processing:

        Operates on entire columns of data instead of row-wise processing.
        Reduces overhead associated with individual row operations.

2.Expression Evaluation:

         Evaluates expressions on entire vectors of data.
         Enhances efficiency in arithmetic, comparisons, and string manipulations.

3.Batch Processing:

          Processes multiple rows together in batches.
          Contrasts with traditional row-wise processing.

4.Improved CPU Cache Utilization:

          Enhances CPU cache utilization by accessing contiguous memory locations.
          Reduces cache misses for better performance.

5.Performance Gains:

          Significantly improves query performance, especially for analytics and large datasets.

Considerations:
          Not all operations can be vectorized.
          Effectiveness depends on the nature of the query and data being processed.
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
Hands-on:
------------------------------------------------------------------------------------------------------------------------------------------
#Connect to beeline terminal:
beeline -u jdbc:hive2://localhost:10000/default -n cloudera

#choose default database

USE default;

Step 1: Create a Table
Let's create a sample table:


-- Create a sample table
CREATE TABLE vectorization_example (
  id INT,
  name STRING,
  value DOUBLE
);

-- Insert some sample data
INSERT INTO vectorization_example VALUES
  (1, 'Alice', 10.5),
  (2, 'Bob', 20.3),
  (3, 'Charlie', 15.8),
  (4, 'David', 25.1);
Step 2: Enable Vectorization
#Enable vectorization in your Hive session:
#Execute the following in your beeline terminal.
 
  
SET hive.vectorized.execution.enabled=true;
SET hive.vectorized.execution.reduce.enabled=true;

Step 3: Perform a Vectorized Query

#Now, let's perform a vectorized query:

 
  
-- Vectorized execution for SELECT and WHERE clauses
#Execute the following in your beeline terminal.

SELECT id, name FROM vectorization_example WHERE value > 15;

#The above query selects id and name columns from the table where the value is greater than 15. The vectorized execution will be automatically applied if the conditions are met.

Step 4: Monitor Vectorization 

#Optionally, you can enable vectorization logging to monitor its usage:
#Execute the following in your beeline terminal.

SET hive.vectorized.execution.logging.level=DEBUG;

Step 5: Check Results

#Inspect the query results to see the output of the vectorized query.
