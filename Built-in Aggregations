--create a table named -employee

CREATE TABLE IF NOT EXISTS employee (
  employee_id INT,
  employee_name STRING,
  department STRING,
  salary DECIMAL(10, 2)
);


--Insert data to the employee table

INSERT INTO employee VALUES
  (1, 'John Doe', 'HR', 50000.00),
  (2, 'Jane Smith', 'IT', 60000.00),
  (3, 'Bob Johnson', 'Finance', 75000.00),
  (4, 'Alice Brown', 'IT', 55000.00),
  (5, 'Mary Johnson', 'Finance', 65000.00),
  (6, 'Tom Wilson', 'HR', 48000.00),
  (7, 'Sara Davis', 'IT', 72000.00),
  (8, 'Chris Evans', 'Finance', 60000.00),
  (9, 'Linda Miller', 'IT', 58000.00),
  (10, 'Mark Thompson', 'HR', 51000.00);



Now, lets work with some built-in aggregate functions

--COUNT: The COUNT function in Hive is used to count the number of rows within each group when using the GROUP BY clause
 
SELECT department, COUNT(*) AS employee_count
FROM employee
GROUP BY department;

--SUM:The SUM function in Hive is used to calculate the sum of numeric values within each group when using the GROUP BY clause.

SELECT department, SUM(salary) AS total_salary
FROM employee
GROUP BY department;



--AVG:The AVG function in Hive is used to calculate the average of numeric values within each group when using the GROUP BY clause.

SELECT department, AVG(salary) AS avg_salary
FROM employee
GROUP BY department;


--MIN and MAX:The MIN and MAX functions in Hive are used to find the minimum and maximum values, respectively, within each group when using the GROUP BY clause.

SELECT department, MIN(salary) AS min_salary, MAX(salary) AS max_salary
FROM employee
GROUP BY department;


--GROUP_CONCAT:The GROUP_CONCAT function in Hive is used to concatenate values from multiple rows into a single string within each group.
 
SELECT department, GROUP_CONCAT(employee_name) AS employee_list
FROM employee
GROUP BY department;

--FIRST and LAST:
In Hive, the FIRST and LAST functions can be used to retrieve the first and last values, respectively, within each group when using the GROUP BY clause.


SELECT department, FIRST(employee_name) AS first_employee, LAST(employee_name) AS last_employee
FROM employee
GROUP BY department;




